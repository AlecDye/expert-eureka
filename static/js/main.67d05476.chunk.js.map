{"version":3,"sources":["components/Navbar.js","hooks/useFetch.js","components/BlogList.js","components/Home.js","components/Create.js","components/BlogDetails.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","BlogList","blogs","title","map","blog","id","author","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","previewText","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67d05476.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"title-container\">\r\n        <h1>Expert Eureka</h1>\r\n        <small className=\"subtitle\" >Super Micro-blog</small>\r\n      </div>\r\n      <nav className=\"nav\">\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/create\">New Blog</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n\r\n}\r\n\r\nexport default Navbar\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null)\r\n  \r\n  useEffect(() => {\r\n    // Abort controller (prevents memory leaks)\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, {signal: abortCont.signal})\r\n        .then(res => {\r\n          if(!res.ok) {\r\n            throw Error('Connected to server but could not fetch data from the server!')\r\n          }\r\n          return res.json()\r\n        })\r\n        .then((data) => {\r\n          setData(data)\r\n          setIsLoading(false)\r\n          setError(null)\r\n        })\r\n        // Connection error (user couldn't reach server)\r\n        .catch(err => {\r\n          // Without this catch, state in home component will still be updated causing memory leak\r\n          if(err.name === 'AbortError') {\r\n            console.log('Fetch aborted')\r\n          } else {\r\n            setError(err.message)\r\n            setIsLoading(false)\r\n          }\r\n        })\r\n\r\n      \r\n    }, 1000)\r\n\r\n    // Clean-up function (trigger event for abort controller)\r\n    return () => abortCont.abort();\r\n  }, [url])\r\n\r\n  return {data, isLoading, error}\r\n}\r\n\r\nexport default useFetch","import { Link } from \"react-router-dom\"\r\n\r\nconst BlogList = ({blogs, title}) => {\r\n  return (\r\n    <div className=\"blog-list\">\r\n      <h1>{title}</h1>\r\n      {\r\n        blogs.map(blog => (\r\n          <div className=\"blog-preview\" key={blog.id}>\r\n            <Link to={`/blogs/${blog.id}`}>\r\n              <h2>{blog.title}</h2>\r\n              <p>Written by: {blog.author}</p>\r\n            </Link>\r\n          </div>\r\n        )) \r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogList\r\n","import useFetch from '../hooks/useFetch'\r\nimport BlogList from './BlogList'\r\n\r\nconst Home = () => {\r\n  const { data: blogs, isLoading, error} = useFetch(`http://localhost:8000/blogs`)\r\n\r\n  return (\r\n    <div>\r\n      {error && <div>{error}</div>}\r\n      {isLoading && <div>Fetching blog posts...</div>}\r\n      {blogs && <BlogList blogs={blogs} title=\"All Blogs\"/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [body, setBody] = useState('')\r\n  const [author, setAuthor] = useState('Hector')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    const blog = {\r\n      title,\r\n      body,\r\n      author\r\n    }\r\n    setIsLoading(true)\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added')\r\n      setIsLoading(false)\r\n      history.push('/')\r\n    })\r\n\r\n  \r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input \r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog body:</label>\r\n        <textarea \r\n          required\r\n          value={body}\r\n          onChange={e => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n        <select\r\n          value={author}\r\n          onChange={e => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"Hector\">Hector</option>\r\n          <option value=\"Josh\">Josh</option>\r\n        </select>\r\n        \r\n        {!isLoading && <button>Add Blog</button>}\r\n        {isLoading && <button disabled>Adding blog...</button>}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Create\r\n","import { useParams } from \"react-router-dom\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport useFetch from \"../hooks/useFetch\"\r\n\r\nconst BlogDetails = () => {\r\n  const {id} = useParams()\r\n  const { data: blog, error, isLoading} = useFetch(`http://localhost:8000/blogs/` + id)\r\n  const history = useHistory()\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='blog-details'>\r\n      {isLoading && <div>Loading blog post...</div>}\r\n      {error && <div>{error}</div>}\r\n      {blog && (\r\n        <article>\r\n          <h2>{blog.title}</h2>\r\n          <p>Written by: {blog.author}</p>\r\n          <div>{blog.previewText}</div>\r\n          <button onClick={handleClick}>Delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogDetails\r\n","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Sorry</h2>\r\n      <p>That page doesn't exist</p>\r\n      <Link to=\"/\">Back to homepage</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Create from \"./components/Create\";\nimport BlogDetails from \"./components/BlogDetails\";\nimport NotFound from \"./components/NotFound\";\n\nconst App = () => {\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <BlogDetails />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}